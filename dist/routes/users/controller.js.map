{"version":3,"sources":["../../../src/routes/users/controller.js"],"names":["initializer","app","Controller","User","connection","models","users","listUsers","userModel","findAll","user","id","name","email","push","update","where","then","result","password","findOrCreate","defaults","destroy","module","exports"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACzB,QAAO,IAAIC,UAAJ,CAAeD,GAAf,CAAP;AACA;;IAEKC,U;AACL,qBAAYD,GAAZ,EAAiB;AAAA;;AAChB,OAAKE,IAAL,GAAYF,IAAIG,UAAJ,CAAeC,MAAf,CAAsBF,IAAlC;AACA;;;;;;;;;;;;AAEIG,a;AACAC,iB,GAAY,E;AACZC,iB;;;eAEW,KAAKL,IAAL,CAAUM,OAAV,E;;;AAAdH,a;;;;;;AACA,yBAAiBA,KAAjB,uHAAwB;AAAfI,aAAe;;AACvBF,qBAAY;AACXG,cAAID,KAAKC,EADE;AAEXC,gBAAMF,KAAKE,IAFA;AAGXC,iBAAOH,KAAKG;AAHD,UAAZ;AAKAN,mBAAUO,IAAV,CAAeN,SAAf;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAKKD,S;;;;;;;;;;;;;;;;;;;yFAESI,E,EAAIC,I,EAAMC,K;;;;;;0CAElB,KAAKV,IAAL,CAAUY,MAAV,CAAiB;AACvBH,eAAMA,IADiB;AAEvBC,gBAAOA;AAFgB,SAAjB,EAGJ;AACFG,gBAAO;AACNL,cAAIA;AADE;AADL,SAHI,EAOJM,IAPI,CAOC,UAAUC,MAAV,EAAkB;AACzB,aAAIA,OAAO,CAAP,IAAY,CAAhB,EAAmB;AAClB,iBAAO,IAAP;AACA,UAFD,MAGK;AACJ,iBAAO,KAAP;AACA;AACD,SAdM,C;;;;;;;;;;;;;;;;;;;;;;;;yFAoBQN,I,EAAMC,K,EAAOM,Q;;;;;;0CAErB,KAAKhB,IAAL,CAAUiB,YAAV,CAAuB,EAAEJ,OAAO,EAAEH,OAAOA,KAAT,EAAT,EAA2BQ,UAAU,EAAET,MAAMA,IAAR,EAAcC,OAAOA,KAArB,EAA4BM,UAAUA,QAAtC,EAArC,EAAvB,C;;;;;;;;;;;;;;;;;;;;;;;;yFAMQR,E;;;;;;0CAER,KAAKR,IAAL,CAAUmB,OAAV,CAAkB;AACxBN,gBAAO;AACNL,cAAIA;AADE;AADiB,SAAlB,EAIJM,IAJI,CAIC,UAACC,MAAD,EAAY;AACnB,aAAIA,SAAS,CAAb,EAAgB;AACf,iBAAO,IAAP;AACA,UAFD,MAGK;AACJ,iBAAO,KAAP;AACA;AACD,SAXM,C;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBVK,OAAOC,OAAP,GAAiBxB,WAAjB","file":"controller.js","sourcesContent":["function initializer(app) {\n\treturn new Controller(app);\n}\n\nclass Controller {\n\tconstructor(app) {\n\t\tthis.User = app.connection.models.User;\n\t}\n\tasync getUsers() {\n\t\tlet users;\n\t\tlet listUsers = [];\n\t\tlet userModel;\n\t\ttry {\n\t\t\tusers = await this.User.findAll();\n\t\t\tfor (let user of users) {\n\t\t\t\tuserModel = {\n\t\t\t\t\tid: user.id,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\temail: user.email\n\t\t\t\t}\n\t\t\t\tlistUsers.push(userModel);\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow error;\n\t\t}\n\t\treturn listUsers;\n\t}\n\tasync updateUser(id, name, email) {\n\t\ttry {\n\t\t\treturn this.User.update({\n\t\t\t\tname: name,\n\t\t\t\temail: email\n\t\t\t}, {\n\t\t\t\twhere: {\n\t\t\t\t\tid: id\n\t\t\t\t}\n\t\t\t}).then(function (result) {\n\t\t\t\tif (result[0] > 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tasync createUser(name, email, password) {\n\t\ttry {\n\t\t\treturn this.User.findOrCreate({ where: { email: email }, defaults: { name: name, email: email, password: password } });\n\t\t}\n\t\tcatch (err) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tasync deleteUser(id) {\n\t\ttry {\n\t\t\treturn this.User.destroy({\n\t\t\t\twhere: {\n\t\t\t\t\tid: id\n\t\t\t\t}\n\t\t\t}).then((result) => {\n\t\t\t\tif (result > 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\n\n\n\n\nmodule.exports = initializer;\n\n"]}