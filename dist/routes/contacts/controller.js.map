{"version":3,"sources":["../../../src/routes/contacts/controller.js"],"names":["initializer","app","Controller","Contact","connection","models","prototype","getContacts","contacts","listContacts","findAll","user","push","updateContact","createContact","module","exports","fieldsValidation","req","callback","assert","notEmpty","validationErrors"],"mappings":";;;;AAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACzB,QAAO,IAAIC,UAAJ,CAAeD,GAAf,CAAP;AACA;;AAED,SAASC,UAAT,CAAoBD,GAApB,EAAyB;AACxB,MAAKE,OAAL,GAAeF,IAAIG,UAAJ,CAAeC,MAAf,CAAsBF,OAArC;AACA;;AAEDD,WAAWI,SAAX,CAAqBC,WAArB,2DAAmC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC9BC,aAD8B,GACnB,EADmB;AAE9BC,iBAF8B,GAEf,EAFe;AAAA;AAAA;AAAA,YAKhB,KAAKN,OAAL,CAAaO,OAAb,EALgB;;AAAA;AAKjCF,aALiC;AAAA;AAAA;AAAA;AAAA;;;AAOjC,sBAAiBA,QAAjB,uHAA2B;AAAlBG,UAAkB;;AAC1BF,mBAAaG,IAAb,CAAkBD,IAAlB;AACA;;AATgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,sCAc3BF,YAd2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnC;;AAiBAP,WAAWI,SAAX,CAAqBO,aAArB,2DAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC;;AAIAX,WAAWI,SAAX,CAAqBQ,aAArB,2DAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC;;AAIAC,OAAOC,OAAP,GAAiBhB,WAAjB;;AAKA;AACA,SAASiB,gBAAT,CAA0BC,GAA1B,EAA+BC,QAA/B,EAAyC;AACxCD,KAAIE,MAAJ,CAAW,MAAX,EAAmB,sBAAnB,EAA2CC,QAA3C;AACAH,KAAIE,MAAJ,CAAW,SAAX,EAAsB,yBAAtB,EAAiDC,QAAjD;;AAEAF,UAASD,IAAII,gBAAJ,EAAT;AAEA","file":"controller.js","sourcesContent":["function initializer(app) {\n\treturn new Controller(app);\n}\n\nfunction Controller(app) {\n\tthis.Contact = app.connection.models.Contact;\n}\n\nController.prototype.getContacts = async function () {\n\tlet contacts = [];\n\tlet listContacts = [];\n\n\ttry {\n\t\tcontacts = await this.Contact.findAll();\n\n\t\tfor (let user of contacts) {\n\t\t\tlistContacts.push(user);\n\t\t}\n\n\t} catch (error) {\n\t\tthrow error;\n\t}\n\treturn listContacts;\n};\n\nController.prototype.updateContact = async function () {\n\n};\n\nController.prototype.createContact = async function () {\n\n};\n\nmodule.exports = initializer;\n\n\n\n\n// Function to validate if fields are empty, return error if assert true\nfunction fieldsValidation(req, callback) {\n\treq.assert('name', 'Name cannot be empty').notEmpty();\n\treq.assert('address', 'Address cannot be empty').notEmpty();\n\n\tcallback(req.validationErrors());\n\n}"]}