{"version":3,"sources":["../../../src/routes/contacts/controller.js"],"names":["initializer","app","Controller","Contact","connection","models","contacts","listContacts","findAll","user","push","id","first_name","last_name","email","phone","update","where","then","result","findOrCreate","defaults","destroy","module","exports"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACzB,QAAO,IAAIC,UAAJ,CAAeD,GAAf,CAAP;AACA;;IAEKC,U;AACL,qBAAYD,GAAZ,EAAiB;AAAA;;AAChB,OAAKE,OAAL,GAAeF,IAAIG,UAAJ,CAAeC,MAAf,CAAsBF,OAArC;AACA;;;;;;;;;;;;AAEIG,gB,GAAW,E;AACXC,oB,GAAe,E;;;eAED,KAAKJ,OAAL,CAAaK,OAAb,E;;;AAAjBF,gB;;;;;;AACA,yBAAiBA,QAAjB,uHAA2B;AAAlBG,aAAkB;;AAC1BF,sBAAaG,IAAb,CAAkBD,IAAlB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAKKF,Y;;;;;;;;;;;;;;;;;;;yFAEYI,E,EAAIC,U,EAAYC,S,EAAWC,K,EAAOC,K;;;;;;0CAE7C,KAAKZ,OAAL,CAAaa,MAAb,CAAoB;AAC1BJ,qBAAYA,UADc;AAE1BC,oBAAWA,SAFe;AAG1BC,gBAAOA,KAHmB;AAI1BC,gBAAOA;AAJmB,SAApB,EAKJ;AACFE,gBAAO;AACNN,cAAIA;AADE;AADL,SALI,EASJO,IATI,CASC,UAAUC,MAAV,EAAkB;AACzB,aAAIA,OAAO,CAAP,IAAY,CAAhB,EAAmB;AAClB,iBAAO,IAAP;AACA,UAFD,MAGK;AACJ,iBAAO,KAAP;AACA;AACD,SAhBM,C;;;;;;;;;;;;;;;;;;;;;;;;yFAsBWP,U,EAAYC,S,EAAWC,K,EAAOC,K;;;;;;0CAGzC,KAAKZ,OAAL,CAAaiB,YAAb,CAA0B,EAAEH,OAAO,EAAEF,OAAOA,KAAT,EAAT,EAA2BM,UAAU,EAAET,YAAYA,UAAd,EAA0BC,WAAWA,SAArC,EAAgDC,OAAOA,KAAvD,EAA8DC,OAAOA,KAArE,EAArC,EAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;yFAMWJ,E;;;;;;0CAEX,KAAKR,OAAL,CAAamB,OAAb,CAAqB;AAC3BL,gBAAO;AACNN,cAAIA;AADE;AADoB,SAArB,EAIJO,IAJI,CAIC,UAACC,MAAD,EAAY;AACnB,aAAIA,SAAS,CAAb,EAAgB;AACf,iBAAO,IAAP;AACA,UAFD,MAGK;AACJ,iBAAO,KAAP;AACA;AACD,SAXM,C;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBVI,OAAOC,OAAP,GAAiBxB,WAAjB","file":"controller.js","sourcesContent":["function initializer(app) {\n\treturn new Controller(app);\n}\n\nclass Controller {\n\tconstructor(app) {\n\t\tthis.Contact = app.connection.models.Contact;\n\t}\n\tasync getContacts() {\n\t\tlet contacts = [];\n\t\tlet listContacts = [];\n\t\ttry {\n\t\t\tcontacts = await this.Contact.findAll();\n\t\t\tfor (let user of contacts) {\n\t\t\t\tlistContacts.push(user);\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow error;\n\t\t}\n\t\treturn listContacts;\n\t}\n\tasync updateContact(id, first_name, last_name, email, phone) {\n\t\ttry {\n\t\t\treturn this.Contact.update({\n\t\t\t\tfirst_name: first_name,\n\t\t\t\tlast_name: last_name,\n\t\t\t\temail: email,\n\t\t\t\tphone: phone\n\t\t\t}, {\n\t\t\t\twhere: {\n\t\t\t\t\tid: id\n\t\t\t\t}\n\t\t\t}).then(function (result) {\n\t\t\t\tif (result[0] > 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tasync createContact(first_name, last_name, email, phone) {\n\t\ttry {\n\t\t\t//TODO: Change 'where' condition\n\t\t\treturn this.Contact.findOrCreate({ where: { phone: phone }, defaults: { first_name: first_name, last_name: last_name, email: email, phone: phone } });\n\t\t}\n\t\tcatch (err) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tasync deleteContact(id) {\n\t\ttry {\n\t\t\treturn this.Contact.destroy({\n\t\t\t\twhere: {\n\t\t\t\t\tid: id\n\t\t\t\t}\n\t\t\t}).then((result) => {\n\t\t\t\tif (result > 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\n\n\n\n\nmodule.exports = initializer;\n"]}