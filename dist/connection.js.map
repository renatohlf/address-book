{"version":3,"sources":["../src/connection.js"],"names":["conn","connection","app","env","process","NODE_ENV","config","database","sequelize","Sequelize","username","password","host","dialect","logging","storage","define","operatorsAliases","models","dir","__dirname","forEach","modelDir","file","model","import","name","Object","keys","key","hasOwnProperty","associate","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAIA,OAAO,IAAX;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACxB,KAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAxB;AACA,KAAMC,SAASH,MAAMD,IAAII,MAAJ,CAAWC,QAAX,CAAoBJ,GAApB,CAAN,GAAiCD,IAAII,MAAJ,CAAWC,QAAX,CAAoB,aAApB,CAAhD;;AAGA,KAAIC,YAAY,IAAIC,mBAAJ,CACfH,OAAOC,QADQ,EAEfD,OAAOI,QAFQ,EAGfJ,OAAOK,QAHQ;AAKdC,QAAMN,OAAOM,IALC;AAMdC,WAASP,OAAOO,OANF;AAOdC,WAASR,OAAOQ,OAPF;AAQdC,WAAST,OAAOS,OARF;AASdC,UAAQV,OAAOU,MATD;AAUdC,oBAAkB;AAVJ,eAWL,KAXK,EAAhB;AAcAjB,QAAO;AACNQ,sBADM;AAENC,gCAFM;AAGNS,UAAQ;AAHF,EAAP;AAKA,KAAIC,MAAM,gBAAKC,SAAL,EAAgB,SAAhB,CAAV;AACA,sBAAYD,GAAZ,EAAiBE,OAAjB,CAAyB,gBAAQ;AAChC,MAAIC,WAAW,gBAAKH,GAAL,EAAUI,IAAV,CAAf;AACA,MAAIC,QAAQhB,UAAUiB,MAAV,CAAiBH,QAAjB,CAAZ;AACAtB,OAAKkB,MAAL,CAAYM,MAAME,IAAlB,IAA0BF,KAA1B;AACA,EAJD;AAKAG,QAAOC,IAAP,CAAY5B,KAAKkB,MAAjB,EAAyBG,OAAzB,CAAiC,eAAO;AACvC,MAAIrB,KAAKkB,MAAL,CAAYW,GAAZ,EAAiBC,cAAjB,CAAgC,WAAhC,CAAJ,EAAkD;AACjD9B,QAAKkB,MAAL,CAAYW,GAAZ,EAAiBE,SAAjB,CAA2B/B,KAAKkB,MAAhC;AACA;AACD,EAJD;;AAMA,QAAOlB,IAAP;AACA;;AAEDgC,OAAOC,OAAP,GAAiBhC,UAAjB","file":"connection.js","sourcesContent":["import { readdirSync } from 'fs';\nimport { join } from 'path';\nimport Sequelize from 'sequelize';\n\nlet conn = null;\n\nfunction connection(app) {\n\tconst env = process.env.NODE_ENV;\n\tconst config = env ? app.config.database[env] : app.config.database['development'];\n\n\n\tvar sequelize = new Sequelize(\n\t\tconfig.database,\n\t\tconfig.username,\n\t\tconfig.password,\n\t\t{\n\t\t\thost: config.host,\n\t\t\tdialect: config.dialect,\n\t\t\tlogging: config.logging,\n\t\t\tstorage: config.storage,\n\t\t\tdefine: config.define,\n\t\t\toperatorsAliases: false,\n\t\t\tlogging: false\n\t\t}\n\t);\n\tconn = {\n\t\tsequelize,\n\t\tSequelize,\n\t\tmodels: {}\n\t};\n\tvar dir = join(__dirname, 'models/');\n\treaddirSync(dir).forEach(file => {\n\t\tvar modelDir = join(dir, file);\n\t\tvar model = sequelize.import(modelDir);\n\t\tconn.models[model.name] = model;\n\t});\n\tObject.keys(conn.models).forEach(key => {\n\t\tif (conn.models[key].hasOwnProperty('associate')) {\n\t\t\tconn.models[key].associate(conn.models);\n\t\t}\n\t});\n\n\treturn conn;\n}\n\nmodule.exports = connection;"]}